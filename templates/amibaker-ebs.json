###############################################################################
# Copyright 2016 Aurora Solutions
#
#    http://www.aurorasolutions.io
#
# Aurora Solutions is an innovative services and product company at
# the forefront of the software industry, with processes and practices
# involving Domain Driven Design(DDD), Agile methodologies to build
# scalable, secure, reliable and high performance products.
#
# Stakater is an Infrastructure-as-a-Code DevOps solution to automate the
# creation of web infrastructure stack on Amazon.â€‚Stakater is a collection
# of Blueprints; where each blueprint is an opinionated, reusable, tested,
# supported, documented, configurable, best-practices definition of a piece
# of infrastructure. Stakater is based on Docker, CoreOS, Terraform, Packer,
# Docker Compose, GoCD, Fleet, ETCD, and much more.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###############################################################################

{
  "variables": {
    "aws_region": "",
    "source_ami": "",
    "ami_name": "",
    "instance_type": "",
    "subnet_id":"",
    "vpc_id":"",
    "docker_registry_crts_dir":"",
    "build_uuid":"",
    "cloud_config_file":"",
    "app_docker_image":"",
    "data_ebs_device_name":"",
    "data_ebs_vol_size":"",
    "logs_ebs_device_name":"",
    "logs_ebs_vol_size":""
  },
  "builders": [{
    "type": "amazon-ebs",
    "region": "{{user `aws_region`}}",
    "subnet_id":"{{user `subnet_id`}}",
    "vpc_id":"{{user `vpc_id`}}",
    "source_ami": "{{user `source_ami`}}",
    "instance_type": "{{user `instance_type`}}",
    "ssh_username": "core",
    "ami_name": "{{user `ami_name`}}",
    "tags": {
      "BuildUUID": "{{user `build_uuid`}}"
    },
    "launch_block_device_mappings": [
      {
        "device_name": "{{user `data_ebs_device_name`}}",
        "volume_size": "{{user `data_ebs_vol_size`}}",
        "volume_type": "gp2"
      },
      {
        "device_name": "{{user `logs_ebs_device_name`}}",
        "volume_size": "{{user `logs_ebs_vol_size`}}",
        "volume_type": "gp2"
      }
    ]
  }],

  "provisioners": [{
    "type":"shell",
    "inline": [
      "sudo mkdir -p /baker-data",
      "sudo chown -R core:core /baker-data"
    ]
  },{
    "type": "file",
    "source": "baker-data/ca.crt",
    "destination": "/baker-data/ca.crt"
  },{
    "type":"shell",
    "inline": [
      "sudo mkdir -p {{user `docker_registry_crts_dir`}}",
      "sudo cp -f /baker-data/ca.crt {{user `docker_registry_crts_dir`}}/ca.crt"
    ]
  },{
    "type": "file",
    "source": "{{user `cloud_config_file`}}",
    "destination": "/baker-data/cloud-config.yaml"
  },{
    "type":"shell",
    "inline": [
      "sudo cp -f /baker-data/cloud-config.yaml /usr/share/oem/cloud-config.yml",
      "sudo docker pull {{user `app_docker_image`}}",
      "sudo coreos-cloudinit --from-file=/usr/share/oem/cloud-config.yml"
    ]
  }]
}